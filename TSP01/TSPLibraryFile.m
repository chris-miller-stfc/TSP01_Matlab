function [methodinfo,structs,enuminfo,ThunkLibName]=TSPLibraryFile
%TSPLIBRARYFILE Create structures to define interfaces found in 'TLTSPB'.

%This function was generated by loadlibrary.m parser version  on Mon Jul 31 17:58:20 2023
%perl options:'TLTSPB.i -outfile=TSPLibraryFile.m -thunkfile=TLTSPB_64_thunk_pcwin64.c -header=TLTSPB.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'TLTSPB_64_thunk_pcwin64');
% void initTLTSPB_System ( void * module ); 
fcns.thunkname{fcnNum}='voidvoidPtrThunk';fcns.name{fcnNum}='initTLTSPB_System'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_findRsrc ( ViSession vi , ViPUInt32 deviceCount ); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_findRsrc'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'ulongPtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getRsrcName ( ViSession vi , ViUInt32 deviceIndex , ViChar resourceName []); 
fcns.thunkname{fcnNum}='longulongulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_getRsrcName'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'ulong', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_init ( ViRsrc resourceName , ViBoolean IDQuery , ViBoolean resetDevice , ViPSession vi ); 
fcns.thunkname{fcnNum}='longvoidPtruint16uint16voidPtrThunk';fcns.name{fcnNum}='TLTSPB_init'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'int8Ptr', 'uint16', 'uint16', 'ulongPtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getRsrcInfo ( ViSession vi , ViUInt32 index , ViChar modelName [], ViChar serialNumber [], ViChar manufacturer [], ViPBoolean resourceInUse ); 
fcns.thunkname{fcnNum}='longulongulongvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_getRsrcInfo'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'ulong', 'int8Ptr', 'int8Ptr', 'int8Ptr', 'uint16Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_close ( ViSession vi ); 
fcns.thunkname{fcnNum}='longulongThunk';fcns.name{fcnNum}='TLTSPB_close'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setTempSensOffset ( ViSession vi , ViUInt16 channel , ViReal64 temperatureOffset ); 
fcns.thunkname{fcnNum}='longulonguint16doubleThunk';fcns.name{fcnNum}='TLTSPB_setTempSensOffset'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'uint16', 'double'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getTempSensOffset ( ViSession vi , ViUInt16 channel , ViInt16 attribute , ViPReal64 temperatureOffset ); 
fcns.thunkname{fcnNum}='longulonguint16int16voidPtrThunk';fcns.name{fcnNum}='TLTSPB_getTempSensOffset'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'uint16', 'int16', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setThermistorExpParams ( ViSession vi , ViUInt16 channel , ViReal64 r0Value , ViReal64 t0Value , ViReal64 betaValue ); 
fcns.thunkname{fcnNum}='longulonguint16doubledoubledoubleThunk';fcns.name{fcnNum}='TLTSPB_setThermistorExpParams'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'uint16', 'double', 'double', 'double'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getThermistorExpParams ( ViSession vi , ViUInt16 channel , ViInt16 attribute , ViPReal64 r0Value , ViPReal64 t0Value , ViPReal64 betaValue ); 
fcns.thunkname{fcnNum}='longulonguint16int16voidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_getThermistorExpParams'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'uint16', 'int16', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setHumSensOffset ( ViSession vi , ViReal64 humidityOffset ); 
fcns.thunkname{fcnNum}='longulongdoubleThunk';fcns.name{fcnNum}='TLTSPB_setHumSensOffset'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'double'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getHumSensOffset ( ViSession vi , ViInt16 attribute , ViPReal64 humidityOffset ); 
fcns.thunkname{fcnNum}='longulongint16voidPtrThunk';fcns.name{fcnNum}='TLTSPB_getHumSensOffset'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int16', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getTemperatureData ( ViSession vi , ViUInt16 channel , ViInt16 attribute , ViPReal64 temperatureValue ); 
fcns.thunkname{fcnNum}='longulonguint16int16voidPtrThunk';fcns.name{fcnNum}='TLTSPB_getTemperatureData'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'uint16', 'int16', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getHumidityData ( ViSession vi , ViInt16 attribute , ViPReal64 humidityValue ); 
fcns.thunkname{fcnNum}='longulongint16voidPtrThunk';fcns.name{fcnNum}='TLTSPB_getHumidityData'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int16', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getThermRes ( ViSession vi , ViUInt16 channel , ViInt16 attribute , ViPReal64 resistanceInOhm ); 
fcns.thunkname{fcnNum}='longulonguint16int16voidPtrThunk';fcns.name{fcnNum}='TLTSPB_getThermRes'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'uint16', 'int16', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getConfiguration ( ViSession vi , ViPInt16 configuration ); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_getConfiguration'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int16Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_measTemperature ( ViSession vi , ViUInt16 channel , ViPReal64 temperature ); 
fcns.thunkname{fcnNum}='longulonguint16voidPtrThunk';fcns.name{fcnNum}='TLTSPB_measTemperature'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'uint16', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_measHumidity ( ViSession vi , ViPReal64 humidity ); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_measHumidity'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_identificationQuery ( ViSession vi , ViChar manufacturerName [], ViChar deviceName [], ViChar serialNumber [], ViChar firmwareRevision []); 
fcns.thunkname{fcnNum}='longulongvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_identificationQuery'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int8Ptr', 'int8Ptr', 'int8Ptr', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_reset ( ViSession vi ); 
fcns.thunkname{fcnNum}='longulongThunk';fcns.name{fcnNum}='TLTSPB_reset'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_selfTest ( ViSession vi , ViPInt16 selfTestResult , ViChar description []); 
fcns.thunkname{fcnNum}='longulongvoidPtrvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_selfTest'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int16Ptr', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_errorQuery ( ViSession vi , ViPInt32 errorNumber , ViChar errorMessage []); 
fcns.thunkname{fcnNum}='longulongvoidPtrvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_errorQuery'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'longPtr', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_errorMessage ( ViSession vi , ViStatus statusCode , ViChar description []); 
fcns.thunkname{fcnNum}='longulonglongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_errorMessage'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'long', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getProductionDate ( ViSession vi , ViChar productionDate []); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_getProductionDate'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_revisionQuery ( ViSession vi , ViChar instrumentDriverRevision [], ViChar firmwareRevision []); 
fcns.thunkname{fcnNum}='longulongvoidPtrvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_revisionQuery'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int8Ptr', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setServiceMode ( ViSession vi , ViChar password []); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_setServiceMode'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_isServiceMode ( ViSession vi , ViBoolean * serviceModeActive ); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_isServiceMode'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'uint16Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setProductionDate ( ViSession vi , ViChar productionDate []); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_setProductionDate'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setDeviceName ( ViSession vi , ViChar deviceName []); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_setDeviceName'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setSerialNr ( ViSession vi , ViChar serialNr []); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_setSerialNr'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getUUID ( ViSession instrumentHandle , ViChar uuid []); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_getUUID'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'int8Ptr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setExtRefVoltage ( ViSession vi , double referenceVoltage ); 
fcns.thunkname{fcnNum}='longulongdoubleThunk';fcns.name{fcnNum}='TLTSPB_setExtRefVoltage'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'double'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getExtRefVoltage ( ViSession vi , double * referenceVoltage ); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_getExtRefVoltage'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'doublePtr'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_setExtSerResist ( ViSession vi , double serialResistance ); 
fcns.thunkname{fcnNum}='longulongdoubleThunk';fcns.name{fcnNum}='TLTSPB_setExtSerResist'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'double'};fcnNum=fcnNum+1;
% ViStatus  TLTSPB_getExtSerResist ( ViSession vi , double * serialResistance ); 
fcns.thunkname{fcnNum}='longulongvoidPtrThunk';fcns.name{fcnNum}='TLTSPB_getExtSerResist'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='long'; fcns.RHS{fcnNum}={'ulong', 'doublePtr'};fcnNum=fcnNum+1;
methodinfo=fcns;